plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10-RC'
    id "com.github.ben-manes.versions" version "0.39.0"
}

// This is for ./gradlew run
application {
    mainClassName = "ContentServer"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'com.github.pambrose.readingbat'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven { url = 'https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin-js-wrappers' }
    mavenCentral()
    maven { url = 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    implementation "com.github.readingbat.readingbat-core:readingbat-core:$readingbat_version"

    runtimeOnly "org.jetbrains.kotlin:kotlin-scripting-jsr223:$kotlin_version"

    implementation "com.github.pambrose.common-utils:core-utils:$utils_version"
    implementation "io.github.microutils:kotlin-logging:$logging_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"

    testImplementation "com.github.readingbat.readingbat-core:readingbat-kotest:$readingbat_version"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"

    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-property:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-ktor:$kotest_ktor_version"

    testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}